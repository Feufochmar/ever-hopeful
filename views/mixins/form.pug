include links

mixin removePage(page, origin)
  form(action=`${page.urlForDelete()}`, method='post', style='display:inline')
    input(type='hidden', name='_method', value='delete')
    input(type='hidden', name='origin', value=`${origin}`)
    button(type='submit', title='Delete this page')&attributes(attributes)
      i.icon.ion-trash-a

mixin tools(action, page)
  ul
    if action != 'list'
      li
        +anchor("/list")(title="All pages").btn.btn-sm.btn-primary
          i.icon.ion-grid

    if action != 'create'
      if !isAnonymous()
        li
          +anchor("/pages/new")(title="Create new page").btn.btn-sm.btn-primary
            i.icon.ion-plus-round

    if action == 'show'
      if !isAnonymous() && canEdit
        li
          +anchor(page.urlForEdit())(title="Edit this page").btn.btn-sm.btn-primary
            i.icon.ion-compose

    if (action == 'edit') || (action == 'show')
      if !isAnonymous() && (page.name != indexPage())
        li
          +removePage(page, 'tools')(class='confirm-delete-page btn btn-sm btn-primary')

    if action == 'show'
      li
        +anchor(page.urlForHistory())(title="Page history").btn.btn-sm.btn-primary
          i.icon.ion-clock

mixin editToolbar()
  ul.toolbar
    li.fullscreen
      button(type='button', title='Toggle fullscreen (Ctrl/Cmd+Enter)').btn.btn-default
        i.icon.ion-arrow-expand
    li.upload
      button(type='button', title='Upload').btn.btn-default
        i.icon.ion-upload
    li.info
      button(type='button', title='Syntax help').btn.btn-default
        i.icon.ion-information-circled
    li.preview
      button(type='button', title='Preview').btn.btn-default
        i.icon.ion-eye

mixin saveAndCancel(pageFrom)
  .well
    input(type='submit',value='Save',title='Save (Ctrl/Cmd+s)').btn.btn-primary
    |&nbsp;
    +anchor(pageFrom, "Cancel").btn

mixin errors(err)
  -var errors = locals.errors;
  - if (typeof(errors) != 'undefined' && Object.keys(errors).length > 0)
    .alert.bg-danger
      ul
        each v in errors
          li
            b= v.msg || v

mixin featuresStylesheets()
  +asset("/css/codemirror-ext.css")(type="text/css")
  +asset("/vendor/codemirror/codemirror.css")(type="text/css")
  +asset("/vendor/codemirror/fullscreen.css")(type="text/css")

mixin featuresJavaScripts()
  +asset("/vendor/codemirror/codemirror.min.js")
  script.
    EverHopeful.cmInstance = CodeMirror.fromTextArea(document.getElementById('js--editor'), {
      lineNumbers: true,
      mode: 'gfm',
      matchBrackets: true,
      lineWrapping: true,
      extraKeys: {
        'Ctrl-Enter': function(cm) {
          EverHopeful.toggleFullscreen();
        },
        'Ctrl-S': function(cm) {
          EverHopeful.save();
        }
      }
    });
    EverHopeful.toolbar();

mixin warning()
  -var warning = locals.warning;
  - if (typeof(warning) != 'undefined')
    .alert.alert-block.alert-warning !{warning}

mixin notice()
  -var notice = locals.notice;
  - if (typeof(notice) != 'undefined')
    .alert.alert-block.alert-info.alert-dismissible !{notice}

mixin dialogBox(h)
  .modal-dialog
    .modal-content
      .modal-header
        button(data-dismiss="modal", aria-hidden="true").close &times;
        h3 #{h}
      .modal-body
      .modal-footer
